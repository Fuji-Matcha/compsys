/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* top =  1  *)
(* src = "bending_machine_mk3.v:1" *)
module bending_mk3(clk, rst, ten, fif, change, serv);
  (* src = "bending_machine_mk3.v:5" *)
  wire [6:0] _000_;
  (* src = "bending_machine_mk3.v:5" *)
  wire [6:0] _001_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _083_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _084_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _085_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _086_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _087_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _088_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _089_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _090_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _091_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _092_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _093_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _094_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _095_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _096_;
  (* src = "bending_machine_mk3.v:5" *)
  wire _097_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _098_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _099_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _100_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _101_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _102_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _103_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _104_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _105_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _106_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _107_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _108_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _109_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _110_;
  (* src = "bending_machine_mk3.v:3" *)
  wire _111_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _167_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _168_;
  (* src = "bending_machine_mk3.v:1" *)
  wire _169_;
  (* src = "bending_machine_mk3.v:1" *)
  output [6:0] change;
  (* src = "bending_machine_mk3.v:1" *)
  input clk;
  (* src = "bending_machine_mk3.v:3" *)
  wire [6:0] count;
  (* src = "bending_machine_mk3.v:1" *)
  input fif;
  (* src = "bending_machine_mk3.v:1" *)
  input rst;
  (* src = "bending_machine_mk3.v:1" *)
  output serv;
  (* src = "bending_machine_mk3.v:1" *)
  input ten;
  INVX1 _170_ (
    .A(_111_),
    .Y(_115_)
  );
  INVX1 _171_ (
    .A(_110_),
    .Y(_116_)
  );
  INVX1 _172_ (
    .A(_109_),
    .Y(_117_)
  );
  INVX1 _173_ (
    .A(_167_),
    .Y(_118_)
  );
  INVX1 _174_ (
    .A(_100_),
    .Y(_119_)
  );
  INVX1 _175_ (
    .A(_103_),
    .Y(_120_)
  );
  INVX1 _176_ (
    .A(_169_),
    .Y(_121_)
  );
  INVX1 _177_ (
    .A(_168_),
    .Y(_122_)
  );
  OR2X1 _178_ (
    .A(_107_),
    .B(_106_),
    .Y(_123_)
  );
  NOR3X1 _179_ (
    .A(_108_),
    .B(_107_),
    .C(_106_),
    .Y(_124_)
  );
  OR2X1 _180_ (
    .A(_108_),
    .B(_123_),
    .Y(_125_)
  );
  NOR2X1 _181_ (
    .A(_117_),
    .B(_124_),
    .Y(_126_)
  );
  NOR3X1 _182_ (
    .A(_116_),
    .B(_117_),
    .C(_124_),
    .Y(_127_)
  );
  NOR2X1 _183_ (
    .A(_111_),
    .B(_127_),
    .Y(_128_)
  );
  AOI21X1 _184_ (
    .A(_122_),
    .B(_128_),
    .C(_167_),
    .Y(_097_)
  );
  MUX2X1 _185_ (
    .A(_098_),
    .B(_105_),
    .S(_128_),
    .Y(_129_)
  );
  NOR2X1 _186_ (
    .A(_167_),
    .B(_129_),
    .Y(_083_)
  );
  NAND2X1 _187_ (
    .A(_099_),
    .B(_128_),
    .Y(_130_)
  );
  OAI21X1 _188_ (
    .A(_106_),
    .B(_128_),
    .C(_130_),
    .Y(_131_)
  );
  AND2X1 _189_ (
    .A(_118_),
    .B(_131_),
    .Y(_084_)
  );
  AND2X1 _190_ (
    .A(_107_),
    .B(_106_),
    .Y(_132_)
  );
  NAND2X1 _191_ (
    .A(_107_),
    .B(_106_),
    .Y(_133_)
  );
  NAND2X1 _192_ (
    .A(_123_),
    .B(_133_),
    .Y(_134_)
  );
  OAI21X1 _193_ (
    .A(_128_),
    .B(_134_),
    .C(_118_),
    .Y(_135_)
  );
  AOI21X1 _194_ (
    .A(_119_),
    .B(_128_),
    .C(_135_),
    .Y(_085_)
  );
  OAI21X1 _195_ (
    .A(_107_),
    .B(_106_),
    .C(_108_),
    .Y(_136_)
  );
  AOI21X1 _196_ (
    .A(_125_),
    .B(_136_),
    .C(_128_),
    .Y(_137_)
  );
  AOI21X1 _197_ (
    .A(_101_),
    .B(_128_),
    .C(_137_),
    .Y(_138_)
  );
  NOR2X1 _198_ (
    .A(_167_),
    .B(_138_),
    .Y(_086_)
  );
  OAI21X1 _199_ (
    .A(_109_),
    .B(_125_),
    .C(_111_),
    .Y(_139_)
  );
  NOR2X1 _200_ (
    .A(_126_),
    .B(_139_),
    .Y(_140_)
  );
  AOI21X1 _201_ (
    .A(_102_),
    .B(_128_),
    .C(_140_),
    .Y(_141_)
  );
  NOR2X1 _202_ (
    .A(_167_),
    .B(_141_),
    .Y(_087_)
  );
  NAND2X1 _203_ (
    .A(_111_),
    .B(_116_),
    .Y(_142_)
  );
  NOR2X1 _204_ (
    .A(_167_),
    .B(_127_),
    .Y(_143_)
  );
  OAI21X1 _205_ (
    .A(_126_),
    .B(_142_),
    .C(_143_),
    .Y(_144_)
  );
  AOI21X1 _206_ (
    .A(_120_),
    .B(_128_),
    .C(_144_),
    .Y(_088_)
  );
  NAND2X1 _207_ (
    .A(_104_),
    .B(_128_),
    .Y(_145_)
  );
  NAND2X1 _208_ (
    .A(_111_),
    .B(_127_),
    .Y(_146_)
  );
  AOI21X1 _209_ (
    .A(_145_),
    .B(_146_),
    .C(_167_),
    .Y(_089_)
  );
  AND2X1 _210_ (
    .A(_105_),
    .B(_118_),
    .Y(_090_)
  );
  NOR2X1 _211_ (
    .A(_112_),
    .B(_169_),
    .Y(_147_)
  );
  NOR3X1 _212_ (
    .A(_111_),
    .B(_127_),
    .C(_147_),
    .Y(_148_)
  );
  OAI21X1 _213_ (
    .A(_112_),
    .B(_169_),
    .C(_128_),
    .Y(_149_)
  );
  NAND2X1 _214_ (
    .A(_106_),
    .B(_148_),
    .Y(_150_)
  );
  OAI21X1 _215_ (
    .A(_106_),
    .B(_148_),
    .C(_118_),
    .Y(_151_)
  );
  AOI21X1 _216_ (
    .A(_106_),
    .B(_148_),
    .C(_151_),
    .Y(_091_)
  );
  XOR2X1 _217_ (
    .A(_107_),
    .B(_150_),
    .Y(_152_)
  );
  NOR2X1 _218_ (
    .A(_167_),
    .B(_152_),
    .Y(_092_)
  );
  AND2X1 _219_ (
    .A(_108_),
    .B(_132_),
    .Y(_153_)
  );
  XNOR2X1 _220_ (
    .A(_108_),
    .B(_132_),
    .Y(_154_)
  );
  NAND2X1 _221_ (
    .A(_112_),
    .B(_121_),
    .Y(_155_)
  );
  NAND2X1 _222_ (
    .A(_169_),
    .B(_154_),
    .Y(_156_)
  );
  OAI21X1 _223_ (
    .A(_154_),
    .B(_155_),
    .C(_156_),
    .Y(_157_)
  );
  AOI22X1 _224_ (
    .A(_108_),
    .B(_149_),
    .C(_157_),
    .D(_128_),
    .Y(_158_)
  );
  NOR2X1 _225_ (
    .A(_167_),
    .B(_158_),
    .Y(_093_)
  );
  OAI21X1 _226_ (
    .A(_108_),
    .B(_132_),
    .C(_169_),
    .Y(_159_)
  );
  OAI21X1 _227_ (
    .A(_153_),
    .B(_155_),
    .C(_159_),
    .Y(_160_)
  );
  NAND2X1 _228_ (
    .A(_128_),
    .B(_160_),
    .Y(_161_)
  );
  OAI21X1 _229_ (
    .A(_117_),
    .B(_161_),
    .C(_118_),
    .Y(_162_)
  );
  AOI21X1 _230_ (
    .A(_117_),
    .B(_161_),
    .C(_162_),
    .Y(_094_)
  );
  OAI21X1 _231_ (
    .A(_117_),
    .B(_159_),
    .C(_155_),
    .Y(_163_)
  );
  OAI21X1 _232_ (
    .A(_109_),
    .B(_153_),
    .C(_121_),
    .Y(_164_)
  );
  NAND3X1 _233_ (
    .A(_128_),
    .B(_163_),
    .C(_164_),
    .Y(_165_)
  );
  OAI21X1 _234_ (
    .A(_116_),
    .B(_165_),
    .C(_118_),
    .Y(_166_)
  );
  AOI21X1 _235_ (
    .A(_116_),
    .B(_165_),
    .C(_166_),
    .Y(_095_)
  );
  NAND2X1 _236_ (
    .A(_116_),
    .B(_164_),
    .Y(_113_)
  );
  NAND3X1 _237_ (
    .A(_143_),
    .B(_163_),
    .C(_113_),
    .Y(_114_)
  );
  OAI21X1 _238_ (
    .A(_115_),
    .B(_167_),
    .C(_114_),
    .Y(_096_)
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _239_ (
    .CLK(clk),
    .D(_001_[0]),
    .Q(count[0])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _240_ (
    .CLK(clk),
    .D(_001_[1]),
    .Q(count[1])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _241_ (
    .CLK(clk),
    .D(_001_[2]),
    .Q(count[2])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _242_ (
    .CLK(clk),
    .D(_001_[3]),
    .Q(count[3])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _243_ (
    .CLK(clk),
    .D(_001_[4]),
    .Q(count[4])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _244_ (
    .CLK(clk),
    .D(_001_[5]),
    .Q(count[5])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _245_ (
    .CLK(clk),
    .D(_001_[6]),
    .Q(count[6])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _246_ (
    .CLK(clk),
    .D(_000_[0]),
    .Q(change[0])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _247_ (
    .CLK(clk),
    .D(_000_[1]),
    .Q(change[1])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _248_ (
    .CLK(clk),
    .D(_000_[2]),
    .Q(change[2])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _249_ (
    .CLK(clk),
    .D(_000_[3]),
    .Q(change[3])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _250_ (
    .CLK(clk),
    .D(_000_[4]),
    .Q(change[4])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _251_ (
    .CLK(clk),
    .D(_000_[5]),
    .Q(change[5])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _252_ (
    .CLK(clk),
    .D(_000_[6]),
    .Q(change[6])
  );
  (* src = "bending_machine_mk3.v:5" *)
  DFFPOSX1 _253_ (
    .CLK(clk),
    .D(_002_),
    .Q(serv)
  );
  assign _111_ = count[6];
  assign _110_ = count[5];
  assign _109_ = count[4];
  assign _108_ = count[3];
  assign _107_ = count[2];
  assign _105_ = count[0];
  assign _106_ = count[1];
  assign _167_ = rst;
  assign _002_ = _097_;
  assign _098_ = change[0];
  assign _000_[0] = _083_;
  assign _099_ = change[1];
  assign _000_[1] = _084_;
  assign _100_ = change[2];
  assign _000_[2] = _085_;
  assign _101_ = change[3];
  assign _000_[3] = _086_;
  assign _102_ = change[4];
  assign _000_[4] = _087_;
  assign _103_ = change[5];
  assign _000_[5] = _088_;
  assign _104_ = change[6];
  assign _000_[6] = _089_;
  assign _001_[0] = _090_;
  assign _112_ = fif;
  assign _169_ = ten;
  assign _001_[1] = _091_;
  assign _001_[2] = _092_;
  assign _001_[3] = _093_;
  assign _001_[4] = _094_;
  assign _001_[5] = _095_;
  assign _001_[6] = _096_;
  assign _168_ = serv;
endmodule
