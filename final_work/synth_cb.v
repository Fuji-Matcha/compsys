/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* top =  1  *)
(* src = "cb.v:4" *)
module cb(co0, co1, co2, co3, ack0, ack1, ack2, ack3, o0, o1, o2, o3);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  (* src = "cb.v:5" *)
  input [3:0] ack0;
  (* src = "cb.v:5" *)
  input [3:0] ack1;
  (* src = "cb.v:5" *)
  input [3:0] ack2;
  (* src = "cb.v:5" *)
  input [3:0] ack3;
  (* src = "cb.v:4" *)
  input [9:0] co0;
  (* src = "cb.v:4" *)
  input [9:0] co1;
  (* src = "cb.v:4" *)
  input [9:0] co2;
  (* src = "cb.v:4" *)
  input [9:0] co3;
  (* src = "cb.v:6" *)
  output [9:0] o0;
  (* src = "cb.v:6" *)
  output [9:0] o1;
  (* src = "cb.v:6" *)
  output [9:0] o2;
  (* src = "cb.v:6" *)
  output [9:0] o3;
  assign _000_ = ack3[0] & co0[0];
  assign _001_ = ack3[1] ? co1[0] : _000_;
  assign _002_ = ack3[2] ? co2[0] : _001_;
  assign o3[0] = ack3[3] ? co3[0] : _002_;
  assign _003_ = co0[1] & ack3[0];
  assign _004_ = ack3[1] ? co1[1] : _003_;
  assign _005_ = ack3[2] ? co2[1] : _004_;
  assign o3[1] = ack3[3] ? co3[1] : _005_;
  assign _006_ = co0[2] & ack3[0];
  assign _007_ = ack3[1] ? co1[2] : _006_;
  assign _008_ = ack3[2] ? co2[2] : _007_;
  assign o3[2] = ack3[3] ? co3[2] : _008_;
  assign _009_ = co0[3] & ack3[0];
  assign _010_ = ack3[1] ? co1[3] : _009_;
  assign _011_ = ack3[2] ? co2[3] : _010_;
  assign o3[3] = ack3[3] ? co3[3] : _011_;
  assign _012_ = co0[4] & ack3[0];
  assign _013_ = ack3[1] ? co1[4] : _012_;
  assign _014_ = ack3[2] ? co2[4] : _013_;
  assign o3[4] = ack3[3] ? co3[4] : _014_;
  assign _015_ = co0[5] & ack3[0];
  assign _016_ = ack3[1] ? co1[5] : _015_;
  assign _017_ = ack3[2] ? co2[5] : _016_;
  assign o3[5] = ack3[3] ? co3[5] : _017_;
  assign _018_ = co0[6] & ack3[0];
  assign _019_ = ack3[1] ? co1[6] : _018_;
  assign _020_ = ack3[2] ? co2[6] : _019_;
  assign o3[6] = ack3[3] ? co3[6] : _020_;
  assign _021_ = co0[7] & ack3[0];
  assign _022_ = ack3[1] ? co1[7] : _021_;
  assign _023_ = ack3[2] ? co2[7] : _022_;
  assign o3[7] = ack3[3] ? co3[7] : _023_;
  assign _024_ = co0[8] & ack3[0];
  assign _025_ = ack3[1] ? co1[8] : _024_;
  assign _026_ = ack3[2] ? co2[8] : _025_;
  assign o3[8] = ack3[3] ? co3[8] : _026_;
  assign _027_ = co0[9] & ack3[0];
  assign _028_ = ack3[1] ? co1[9] : _027_;
  assign _029_ = ack3[2] ? co2[9] : _028_;
  assign o3[9] = ack3[3] ? co3[9] : _029_;
  assign _030_ = ack2[0] & co0[0];
  assign _031_ = ack2[1] ? co1[0] : _030_;
  assign _032_ = ack2[2] ? co2[0] : _031_;
  assign o2[0] = ack2[3] ? co3[0] : _032_;
  assign _033_ = ack2[0] & co0[1];
  assign _034_ = ack2[1] ? co1[1] : _033_;
  assign _035_ = ack2[2] ? co2[1] : _034_;
  assign o2[1] = ack2[3] ? co3[1] : _035_;
  assign _036_ = ack2[0] & co0[2];
  assign _037_ = ack2[1] ? co1[2] : _036_;
  assign _038_ = ack2[2] ? co2[2] : _037_;
  assign o2[2] = ack2[3] ? co3[2] : _038_;
  assign _039_ = ack2[0] & co0[3];
  assign _040_ = ack2[1] ? co1[3] : _039_;
  assign _041_ = ack2[2] ? co2[3] : _040_;
  assign o2[3] = ack2[3] ? co3[3] : _041_;
  assign _042_ = ack2[0] & co0[4];
  assign _043_ = ack2[1] ? co1[4] : _042_;
  assign _044_ = ack2[2] ? co2[4] : _043_;
  assign o2[4] = ack2[3] ? co3[4] : _044_;
  assign _045_ = ack2[0] & co0[5];
  assign _046_ = ack2[1] ? co1[5] : _045_;
  assign _047_ = ack2[2] ? co2[5] : _046_;
  assign o2[5] = ack2[3] ? co3[5] : _047_;
  assign _048_ = ack2[0] & co0[6];
  assign _049_ = ack2[1] ? co1[6] : _048_;
  assign _050_ = ack2[2] ? co2[6] : _049_;
  assign o2[6] = ack2[3] ? co3[6] : _050_;
  assign _051_ = ack2[0] & co0[7];
  assign _052_ = ack2[1] ? co1[7] : _051_;
  assign _053_ = ack2[2] ? co2[7] : _052_;
  assign o2[7] = ack2[3] ? co3[7] : _053_;
  assign _054_ = ack2[0] & co0[8];
  assign _055_ = ack2[1] ? co1[8] : _054_;
  assign _056_ = ack2[2] ? co2[8] : _055_;
  assign o2[8] = ack2[3] ? co3[8] : _056_;
  assign _057_ = ack2[0] & co0[9];
  assign _058_ = ack2[1] ? co1[9] : _057_;
  assign _059_ = ack2[2] ? co2[9] : _058_;
  assign o2[9] = ack2[3] ? co3[9] : _059_;
  assign _060_ = ack1[0] & co0[0];
  assign _061_ = ack1[1] ? co1[0] : _060_;
  assign _062_ = ack1[2] ? co2[0] : _061_;
  assign o1[0] = ack1[3] ? co3[0] : _062_;
  assign _063_ = ack1[0] & co0[1];
  assign _064_ = ack1[1] ? co1[1] : _063_;
  assign _065_ = ack1[2] ? co2[1] : _064_;
  assign o1[1] = ack1[3] ? co3[1] : _065_;
  assign _066_ = ack1[0] & co0[2];
  assign _067_ = ack1[1] ? co1[2] : _066_;
  assign _068_ = ack1[2] ? co2[2] : _067_;
  assign o1[2] = ack1[3] ? co3[2] : _068_;
  assign _069_ = ack1[0] & co0[3];
  assign _070_ = ack1[1] ? co1[3] : _069_;
  assign _071_ = ack1[2] ? co2[3] : _070_;
  assign o1[3] = ack1[3] ? co3[3] : _071_;
  assign _072_ = ack1[0] & co0[4];
  assign _073_ = ack1[1] ? co1[4] : _072_;
  assign _074_ = ack1[2] ? co2[4] : _073_;
  assign o1[4] = ack1[3] ? co3[4] : _074_;
  assign _075_ = ack1[0] & co0[5];
  assign _076_ = ack1[1] ? co1[5] : _075_;
  assign _077_ = ack1[2] ? co2[5] : _076_;
  assign o1[5] = ack1[3] ? co3[5] : _077_;
  assign _078_ = ack1[0] & co0[6];
  assign _079_ = ack1[1] ? co1[6] : _078_;
  assign _080_ = ack1[2] ? co2[6] : _079_;
  assign o1[6] = ack1[3] ? co3[6] : _080_;
  assign _081_ = ack1[0] & co0[7];
  assign _082_ = ack1[1] ? co1[7] : _081_;
  assign _083_ = ack1[2] ? co2[7] : _082_;
  assign o1[7] = ack1[3] ? co3[7] : _083_;
  assign _084_ = ack1[0] & co0[8];
  assign _085_ = ack1[1] ? co1[8] : _084_;
  assign _086_ = ack1[2] ? co2[8] : _085_;
  assign o1[8] = ack1[3] ? co3[8] : _086_;
  assign _087_ = ack1[0] & co0[9];
  assign _088_ = ack1[1] ? co1[9] : _087_;
  assign _089_ = ack1[2] ? co2[9] : _088_;
  assign o1[9] = ack1[3] ? co3[9] : _089_;
  assign _090_ = ack0[0] & co0[0];
  assign _091_ = ack0[1] ? co1[0] : _090_;
  assign _092_ = ack0[2] ? co2[0] : _091_;
  assign o0[0] = ack0[3] ? co3[0] : _092_;
  assign _093_ = ack0[0] & co0[1];
  assign _094_ = ack0[1] ? co1[1] : _093_;
  assign _095_ = ack0[2] ? co2[1] : _094_;
  assign o0[1] = ack0[3] ? co3[1] : _095_;
  assign _096_ = ack0[0] & co0[2];
  assign _097_ = ack0[1] ? co1[2] : _096_;
  assign _098_ = ack0[2] ? co2[2] : _097_;
  assign o0[2] = ack0[3] ? co3[2] : _098_;
  assign _099_ = ack0[0] & co0[3];
  assign _100_ = ack0[1] ? co1[3] : _099_;
  assign _101_ = ack0[2] ? co2[3] : _100_;
  assign o0[3] = ack0[3] ? co3[3] : _101_;
  assign _102_ = ack0[0] & co0[4];
  assign _103_ = ack0[1] ? co1[4] : _102_;
  assign _104_ = ack0[2] ? co2[4] : _103_;
  assign o0[4] = ack0[3] ? co3[4] : _104_;
  assign _105_ = ack0[0] & co0[5];
  assign _106_ = ack0[1] ? co1[5] : _105_;
  assign _107_ = ack0[2] ? co2[5] : _106_;
  assign o0[5] = ack0[3] ? co3[5] : _107_;
  assign _108_ = ack0[0] & co0[6];
  assign _109_ = ack0[1] ? co1[6] : _108_;
  assign _110_ = ack0[2] ? co2[6] : _109_;
  assign o0[6] = ack0[3] ? co3[6] : _110_;
  assign _111_ = ack0[0] & co0[7];
  assign _112_ = ack0[1] ? co1[7] : _111_;
  assign _113_ = ack0[2] ? co2[7] : _112_;
  assign o0[7] = ack0[3] ? co3[7] : _113_;
  assign _114_ = ack0[0] & co0[8];
  assign _115_ = ack0[1] ? co1[8] : _114_;
  assign _116_ = ack0[2] ? co2[8] : _115_;
  assign o0[8] = ack0[3] ? co3[8] : _116_;
  assign _117_ = ack0[0] & co0[9];
  assign _118_ = ack0[1] ? co1[9] : _117_;
  assign _119_ = ack0[2] ? co2[9] : _118_;
  assign o0[9] = ack0[3] ? co3[9] : _119_;
endmodule
